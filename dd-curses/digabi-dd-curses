#!/bin/bash

TITLE=digabi-dd-curses

write_message () {
  if [ -n "`which logger`" ]; then
    logger "[$TITLE] $1"
  fi

  echo "$TITLE: $1"
}

is_abitti_ktp () {
  if [ -n `uname -r | grep "\-ytl-"` ]; then
    return 1
  fi

  return 0
}


automount_disable () {
  if [ is_abitti_ktp ]; then
    write_message "Now disabling automount..."
    mv /etc/udev/rules.d/80-auto-mount-usb.rules /etc/udev/rules.d/80-auto-mount-usb.rules.disabled
  else
    write_message "Warning: Cannot disable automount"
  fi
}

automount_enable () {
  if [ is_abitti_ktp ]; then
    write_message "Now enabling automount..."
    mv /etc/udev/rules.d/80-auto-mount-usb.rules.disabled /etc/udev/rules.d/80-auto-mount-usb.rules
  else
    write_message "Warning: Cannot enable automount"
  fi
}

if [ "$1" = "" ]; then
  echo "usage: $0 path/to/disk_image.dd"
  echo ""
  echo "e.g. $0 /media/usb1/ktp.dd"
  exit 1
fi

echo "Making sure you're root..."
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

automount_disable

# Disable Abitti-KTP specific USB error monitoring service
if [ "`systemctl is-active digabi-monitor-usb-errors`" == "active" ]; then
  write_message "Stopping digabi-monitor-usb-errors"
  systemctl stop digabi-monitor-usb-errors
fi

python2 /usr/local/lib/digabi-dd-curses/write_dd.py "$1"

# NB! We're not starting USB-error-watchdog since it may cause trouble when
#     we're still probably playing with USB sticks at this point

automount_enable

echo "All done!"
